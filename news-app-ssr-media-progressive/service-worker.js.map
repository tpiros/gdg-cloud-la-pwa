{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","utils.mjs","node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/canConstructReadableStream.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-precaching/matchPrecache.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-streams/_version.js","node_modules/workbox-streams/concatenate.js","node_modules/workbox-streams/utils/createHeaders.js","node_modules/workbox-streams/concatenateToResponse.js","node_modules/workbox-streams/isSupported.js","node_modules/workbox-streams/strategy.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","service-worker.dev.mjs"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","generateCard","article","today","Date","added","difference","parseInt","articleImage","image","split","insertIndex","indexOf","splice","cloudinary_url","join","id","slug","generateArticle","title","author","body","_","e","logger","fallback","code","msg","args","JSON","stringify","messageGenerator","WorkboxError","errorCode","details","message","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","_cacheNameDetails","googleAnalytics","precache","prefix","suffix","registration","scope","_createCacheName","cacheName","filter","eachCacheNameDetail","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","URL","param","searchParams","href","cacheMatchIgnoreParams","cache","request","matchOptions","strippedRequestURL","url","match","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","supportStatus","canConstructReadableStream","ReadableStream","start","canConstructResponseFromBodyStream","testResponse","Response","dontWaitFor","promise","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","open","onerror","evt","transaction","abort","onsuccess","db","bind","storeName","query","getAllKeys","count","getAllMatching","includeKeys","entries","map","index","direction","txn","store","objectStore","target","results","openCursor","cursor","storeNames","onabort","oncomplete","objStore","apply","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","_call","Deferred","deleteDatabase","onblocked","executeQuotaErrorCallbacks","getFriendlyURL","urlObj","String","location","replace","RegExp","origin","timeout","ms","waitUntil","event","asyncFn","returnPromise","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","blob","clientsClaim","addEventListener","clients","claim","skipWaiting","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","set","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","params","_precacheController","getCacheKeyForURL","Request","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","Map","plugin","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","iterateCallbacks","cb","thrownError","pluginFilteredRequest","fetch","fetchOptions","fetchResponse","runCallbacks","responseClone","cachePut","getCacheKey","effectiveRequest","multiMatchOptions","caches","_ensureResponseSafeToCache","responseToCache","hasCacheUpdateCallback","oldResponse","put","newResponse","get","statefulCallback","statefulParam","shift","pluginsUsed","Strategy","handleAll","responseDone","handler","_getResponse","handlerDone","_awaitComplete","_handle","doneWaiting","destroy","copyRedirectedCacheableResponsesPlugin","cacheWillUpdate","redirected","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","cacheMatch","_handleInstall","_handleFetch","groupCollapsed","log","groupEnd","fetchAndCachePut","responseSafeToPrecache","Boolean","_usesCustomCacheableResponseLogic","some","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","has","firstEntry","secondEntry","integrity","warningMessage","console","warn","installReportPlugin","credentials","all","currentlyCachedRequests","expectedCacheKeys","deletedURLs","getOrCreatePrecacheController","defaultMethod","normalizeHandler","Route","RegExpRoute","regExp","exec","Router","_routes","_defaultHandlerMap","responsePromise","handleRequest","respondWith","data","payload","requestPromises","urlsToCache","ports","postMessage","protocol","startsWith","sameOrigin","findMatchingRoute","route","_catchHandler","routes","matchResult","Array","isArray","routeIndex","defaultRouter","getOrCreateDefaultRouter","addFetchListener","addCacheListener","registerRoute","capture","captureUrl","matchCallback","moduleName","funcName","paramName","removeIgnoredSearchParams","ignoreURLParametersMatching","test","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","addRoute","precacheRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","includes","cleanupOutdatedCaches","cachesDeleted","matchPrecache","precacheAndRoute","CacheFirst","cacheOkAndOpaquePlugin","StaleWhileRevalidate","p","unshift","fetchAndCachePromise","_getReaderFromSource","source","getReader","concatenate","sourcePromises","readerPromises","sourcePromise","streamDeferred","stream","pull","controller","reader","read","cancel","createHeaders","headersInit","concatenateToResponse","isSupported","sourceFunctions","blobPartsPromises","blobParts","Blob","CacheableResponse","config","_statuses","statuses","_headers","cacheable","headerName","CacheableResponsePlugin","_cacheableResponse","isResponseCacheable","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","timestamp","_getId","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","maxAgeSeconds","_matchOptions","_timestampModel","now","expireEntries","urlsExpired","setTimestamp","getTimestamp","expireOlderThan","Infinity","ExpirationPlugin","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","importScripts","__WB_MANIFEST","apiRoute","cacheStrategy","apiStrategy","requestWillFetch","cloudinaryPlugin","streamsStrategy","json","articles","cards"],"mappings":"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","file":"service-worker.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export function generateCard(article) {\n  const today = new Date();\n  const added = new Date(article.added);\n  const difference = parseInt((today - added) / (1000 * 3600));\n  const articleImage = article.image.split('/');\n  const insertIndex = articleImage.indexOf('upload');\n  articleImage.splice(insertIndex + 1, 0, `w_500`);\n  const cloudinary_url = articleImage.join('/');\n\n  return `\n<div class=\"col-md-4\">\n  <div class=\"card mb-4 shadow-sm\" data-cache=\"http://localhost:3000/api/news/${\n    article.id\n  }\">\n    <img\n      class=\"card-img-top\"\n      src=\"${cloudinary_url}\"\n      alt=\"\">\n    <div class=\"card-body\">\n      <p class=\"card-text\">${article.slug}</p>\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <div class=\"btn-group\">\n          <a href=\"news/${\n            article.id\n          }\" class=\"btn btn-sm btn-outline-primary read-more\">Read more</a>\n          <a class=\"btn btn-sm btn-outline-secondary read-later\" data-cache=\"http://localhost:3000/api/news/${\n            article.id\n          }\" on>Read later</a>\n        </div>\n        <small class=\"text-muted\">${\n          difference === 1\n            ? `${difference} hour ago`\n            : `${difference} hours ago`\n        }</small>\n      </div>\n    </div>\n  </div>\n</div>`;\n}\n\nexport function generateArticle(article) {\n  const today = new Date();\n  const added = new Date(article.added);\n  const difference = parseInt((today - added) / (1000 * 3600));\n  const articleImage = article.image.split('/');\n  const insertIndex = articleImage.indexOf('upload');\n  articleImage.splice(insertIndex + 1, 0, `w_500`);\n  const cloudinary_url = articleImage.join('/');\n\n  return `<div class=\"col-md-12\">\n    <img\n      class=\"card-img-top\"\n      src=\"${cloudinary_url}\"\n      alt=\"\">\n    <h2>${article.title}</h2>\n    <p>Written by <strong>${\n      article.author\n    }</strong> <small class=\"text-muted\">${\n    difference === 1 ? `${difference} hour ago` : `${difference} hours ago`\n  }</small></p>\n    <p>${article.body}</p>\n    <p><small><a href=\"/\">Go back</small></p>\n  </div>`;\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    self.skipWaiting();\n}\nexport { skipWaiting };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` and `plugins` defined on the strategy\n     * object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    fetch(input) {\n        return this.waitUntil((async () => {\n            const { event } = this;\n            let request = toRequest(input);\n            if (request.mode === 'navigate' &&\n                event instanceof FetchEvent &&\n                event.preloadResponse) {\n                const possiblePreloadResponse = await event.preloadResponse;\n                if (possiblePreloadResponse) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.log(`Using a preloaded navigation response for ` +\n                            `'${getFriendlyURL(request.url)}'`);\n                    }\n                    return possiblePreloadResponse;\n                }\n            }\n            // If there is a fetchDidFail plugin, we need to save a clone of the\n            // original request before it's either modified by a requestWillFetch\n            // plugin or before the original request's body is consumed via fetch().\n            const originalRequest = this.hasCallback('fetchDidFail') ?\n                request.clone() : null;\n            try {\n                for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                    request = await cb({ request: request.clone(), event });\n                }\n            }\n            catch (err) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownError: err,\n                });\n            }\n            // The request can be altered by plugins with `requestWillFetch` making\n            // the original request (most likely from a `fetch` event) different\n            // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n            const pluginFilteredRequest = request.clone();\n            try {\n                let fetchResponse;\n                // See https://github.com/GoogleChrome/workbox/issues/1796\n                fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                    undefined : this._strategy.fetchOptions);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Network request for ` +\n                        `'${getFriendlyURL(request.url)}' returned a response with ` +\n                        `status '${fetchResponse.status}'.`);\n                }\n                for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                    fetchResponse = await callback({\n                        event,\n                        request: pluginFilteredRequest,\n                        response: fetchResponse,\n                    });\n                }\n                return fetchResponse;\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.error(`Network request for ` +\n                        `'${getFriendlyURL(request.url)}' threw an error.`, error);\n                }\n                // `originalRequest` will only exist if a `fetchDidFail` callback\n                // is being used (see above).\n                if (originalRequest) {\n                    await this.runCallbacks('fetchDidFail', {\n                        error,\n                        event,\n                        originalRequest: originalRequest.clone(),\n                        request: pluginFilteredRequest.clone(),\n                    });\n                }\n                throw error;\n            }\n        })());\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    cacheMatch(key) {\n        return this.waitUntil((async () => {\n            const request = toRequest(key);\n            let cachedResponse;\n            const { cacheName, matchOptions } = this._strategy;\n            const effectiveRequest = await this.getCacheKey(request, 'read');\n            const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n            cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    logger.debug(`Found a cached response in '${cacheName}'.`);\n                }\n                else {\n                    logger.debug(`No cached response found in '${cacheName}'.`);\n                }\n            }\n            for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n                cachedResponse = (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n            }\n            return cachedResponse;\n        })());\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Promise<void>} response The response to cache.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\nconst copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        const response = await handler.fetchAndCachePut(request);\n        // Any time there's no response, consider it a precaching error.\n        let responseSafeToPrecache = Boolean(response);\n        // Also consider it an error if the user didn't pass their own\n        // cacheWillUpdate plugin, and the response is a 400+ (note: this means\n        // that by default opaque responses can be precached).\n        if (response && response.status >= 400 &&\n            !this._usesCustomCacheableResponseLogic()) {\n            responseSafeToPrecache = false;\n        }\n        if (!responseSafeToPrecache) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * Returns true if any users plugins were added containing their own\n     * `cacheWillUpdate` callback.\n     *\n     * This method indicates whether the default cacheable response logic (i.e.\n     * <400, including opaque responses) should be used. If a custom plugin\n     * with a `cacheWillUpdate` callback is passed, then the strategy should\n     * defer to that plugin's logic.\n     *\n     * @private\n     */\n    _usesCustomCacheableResponseLogic() {\n        return this.plugins.some((plugin) => plugin.cacheWillUpdate &&\n            plugin !== copyRedirectedCacheableResponsesPlugin);\n    }\n}\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {Object} options\n     * @param {Event} options.event The install event.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent}\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of [Route]{@link module:workbox-routing.Route} that takes a\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof module:workbox-precaching\n * @extends module:workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    return { cacheKey };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler\n            .fetchAndCachePut(request)\n            .catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:streams:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport './_version.js';\n/**\n * Takes either a Response, a ReadableStream, or a\n * [BodyInit](https://fetch.spec.whatwg.org/#bodyinit) and returns the\n * ReadableStreamReader object associated with it.\n *\n * @param {module:workbox-streams.StreamSource} source\n * @return {ReadableStreamReader}\n * @private\n */\nfunction _getReaderFromSource(source) {\n    if (source instanceof Response) {\n        return source.body.getReader();\n    }\n    if (source instanceof ReadableStream) {\n        return source.getReader();\n    }\n    return new Response(source).body.getReader();\n}\n/**\n * Takes multiple source Promises, each of which could resolve to a Response, a\n * ReadableStream, or a [BodyInit](https://fetch.spec.whatwg.org/#bodyinit).\n *\n * Returns an object exposing a ReadableStream with each individual stream's\n * data returned in sequence, along with a Promise which signals when the\n * stream is finished (useful for passing to a FetchEvent's waitUntil()).\n *\n * @param {Array<Promise<module:workbox-streams.StreamSource>>} sourcePromises\n * @return {Object<{done: Promise, stream: ReadableStream}>}\n *\n * @memberof module:workbox-streams\n */\nfunction concatenate(sourcePromises) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isArray(sourcePromises, {\n            moduleName: 'workbox-streams',\n            funcName: 'concatenate',\n            paramName: 'sourcePromises',\n        });\n    }\n    const readerPromises = sourcePromises.map((sourcePromise) => {\n        return Promise.resolve(sourcePromise).then((source) => {\n            return _getReaderFromSource(source);\n        });\n    });\n    const streamDeferred = new Deferred();\n    let i = 0;\n    const logMessages = [];\n    const stream = new ReadableStream({\n        pull(controller) {\n            return readerPromises[i]\n                .then((reader) => reader.read())\n                .then((result) => {\n                if (result.done) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logMessages.push(['Reached the end of source:',\n                            sourcePromises[i]]);\n                    }\n                    i++;\n                    if (i >= readerPromises.length) {\n                        // Log all the messages in the group at once in a single group.\n                        if (process.env.NODE_ENV !== 'production') {\n                            logger.groupCollapsed(`Concatenating ${readerPromises.length} sources.`);\n                            for (const message of logMessages) {\n                                if (Array.isArray(message)) {\n                                    logger.log(...message);\n                                }\n                                else {\n                                    logger.log(message);\n                                }\n                            }\n                            logger.log('Finished reading all sources.');\n                            logger.groupEnd();\n                        }\n                        controller.close();\n                        streamDeferred.resolve();\n                        return;\n                    }\n                    // The `pull` method is defined because we're inside it.\n                    return this.pull(controller);\n                }\n                else {\n                    controller.enqueue(result.value);\n                }\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.error('An error occurred:', error);\n                }\n                streamDeferred.reject(error);\n                throw error;\n            });\n        },\n        cancel() {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn('The ReadableStream was cancelled.');\n            }\n            streamDeferred.resolve();\n        },\n    });\n    return { done: streamDeferred.promise, stream };\n}\nexport { concatenate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * This is a utility method that determines whether the current browser supports\n * the features required to create streamed responses. Currently, it checks if\n * [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * is available.\n *\n * @private\n * @param {HeadersInit} [headersInit] If there's no `Content-Type` specified,\n * `'text/html'` will be used by default.\n * @return {boolean} `true`, if the current browser meets the requirements for\n * streaming responses, and `false` otherwise.\n *\n * @memberof module:workbox-streams\n */\nfunction createHeaders(headersInit = {}) {\n    // See https://github.com/GoogleChrome/workbox/issues/1461\n    const headers = new Headers(headersInit);\n    if (!headers.has('content-type')) {\n        headers.set('content-type', 'text/html');\n    }\n    return headers;\n}\nexport { createHeaders };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { createHeaders } from './utils/createHeaders.js';\nimport { concatenate } from './concatenate.js';\nimport './_version.js';\n/**\n * Takes multiple source Promises, each of which could resolve to a Response, a\n * ReadableStream, or a [BodyInit](https://fetch.spec.whatwg.org/#bodyinit),\n * along with a\n * [HeadersInit](https://fetch.spec.whatwg.org/#typedefdef-headersinit).\n *\n * Returns an object exposing a Response whose body consists of each individual\n * stream's data returned in sequence, along with a Promise which signals when\n * the stream is finished (useful for passing to a FetchEvent's waitUntil()).\n *\n * @param {Array<Promise<module:workbox-streams.StreamSource>>} sourcePromises\n * @param {HeadersInit} [headersInit] If there's no `Content-Type` specified,\n * `'text/html'` will be used by default.\n * @return {Object<{done: Promise, response: Response}>}\n *\n * @memberof module:workbox-streams\n */\nfunction concatenateToResponse(sourcePromises, headersInit) {\n    const { done, stream } = concatenate(sourcePromises);\n    const headers = createHeaders(headersInit);\n    const response = new Response(stream, { headers });\n    return { done, response };\n}\nexport { concatenateToResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructReadableStream } from 'workbox-core/_private/canConstructReadableStream.js';\nimport './_version.js';\n/**\n * This is a utility method that determines whether the current browser supports\n * the features required to create streamed responses. Currently, it checks if\n * [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * can be created.\n *\n * @return {boolean} `true`, if the current browser meets the requirements for\n * streaming responses, and `false` otherwise.\n *\n * @memberof module:workbox-streams\n */\nfunction isSupported() {\n    return canConstructReadableStream();\n}\nexport { isSupported };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { createHeaders } from './utils/createHeaders.js';\nimport { concatenateToResponse } from './concatenateToResponse.js';\nimport { isSupported } from './isSupported.js';\nimport './_version.js';\n/**\n * A shortcut to create a strategy that could be dropped-in to Workbox's router.\n *\n * On browsers that do not support constructing new `ReadableStream`s, this\n * strategy will automatically wait for all the `sourceFunctions` to complete,\n * and create a final response that concatenates their values together.\n *\n * @param {Array<function({event, request, url, params})>} sourceFunctions\n * An array of functions similar to {@link module:workbox-routing~handlerCallback}\n * but that instead return a {@link module:workbox-streams.StreamSource} (or a\n * Promise which resolves to one).\n * @param {HeadersInit} [headersInit] If there's no `Content-Type` specified,\n * `'text/html'` will be used by default.\n * @return {module:workbox-routing~handlerCallback}\n * @memberof module:workbox-streams\n */\nfunction strategy(sourceFunctions, headersInit) {\n    return async ({ event, request, url, params }) => {\n        const sourcePromises = sourceFunctions.map((fn) => {\n            // Ensure the return value of the function is always a promise.\n            return Promise.resolve(fn({ event, request, url, params }));\n        });\n        if (isSupported()) {\n            const { done, response } = concatenateToResponse(sourcePromises, headersInit);\n            if (event) {\n                event.waitUntil(done);\n            }\n            return response;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The current browser doesn't support creating response ` +\n                `streams. Falling back to non-streaming response instead.`);\n        }\n        // Fallback to waiting for everything to finish, and concatenating the\n        // responses.\n        const blobPartsPromises = sourcePromises.map(async (sourcePromise) => {\n            const source = await sourcePromise;\n            if (source instanceof Response) {\n                return source.blob();\n            }\n            else {\n                // Technically, a `StreamSource` object can include any valid\n                // `BodyInit` type, including `FormData` and `URLSearchParams`, which\n                // cannot be passed to the Blob constructor directly, so we have to\n                // convert them to actual Blobs first.\n                return new Response(source).blob();\n            }\n        });\n        const blobParts = await Promise.all(blobPartsPromises);\n        const headers = createHeaders(headersInit);\n        // Constructing a new Response from a Blob source is well-supported.\n        // So is constructing a new Blob from multiple source Blobs or strings.\n        return new Response(new Blob(blobParts), { headers });\n    };\n}\nexport { strategy };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.0.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","importScripts(\n  'node_modules/cloudinary-workbox-plugin/dist/cloudinaryPlugin.min.js'\n);\nimport 'regenerator-runtime/runtime';\nimport { generateCard, generateArticle } from './utils.mjs';\n\nimport { clientsClaim, skipWaiting } from 'workbox-core';\nimport {\n  precacheAndRoute,\n  getCacheKeyForURL,\n  cleanupOutdatedCaches,\n  matchPrecache,\n} from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate, CacheFirst } from 'workbox-strategies';\nimport { strategy as streamsStrategy } from 'workbox-streams';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response';\nimport { ExpirationPlugin } from 'workbox-expiration';\n\nprecacheAndRoute(self.__WB_MANIFEST);\ncleanupOutdatedCaches();\n\nconst apiRoute = `http://localhost:3000/api/news`;\n\nconst cacheStrategy = new CacheFirst();\nconst apiStrategy = new StaleWhileRevalidate({\n  cacheName: 'api-cache',\n});\n\nregisterRoute(\n  // new RegExp('^https://res.cloudinary.com'),\n  ({ url }) => url.origin === 'https://res.cloudinary.com',\n  new CacheFirst({\n    cacheName: 'cloudinary-images',\n    plugins: [\n      {\n        requestWillFetch: async ({ request }) =>\n          cloudinaryPlugin.requestWillFetch(request),\n      },\n      new CacheableResponsePlugin({\n        statuses: [0, 200],\n      }),\n      new ExpirationPlugin({\n        maxEntries: 50,\n        purgeOnQuotaError: true,\n      }),\n    ],\n  })\n);\n\nregisterRoute(\n  '/',\n  streamsStrategy([\n    () => matchPrecache('partials/header.html'),\n    () => matchPrecache('partials/info.html'),\n    () => matchPrecache('partials/hero.html'),\n    () => matchPrecache('partials/articles.html'),\n    async ({ event, url }) => {\n      try {\n        const response = await apiStrategy.handle({\n          event,\n          request: apiRoute,\n        });\n        const articles = await response.json();\n        let cards = '';\n        articles.forEach((article) => {\n          cards += generateCard(article);\n        });\n        return cards;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    () => matchPrecache('partials/articles-close.html'),\n    () => matchPrecache('partials/footer.html'),\n  ])\n);\n\nregisterRoute(\n  new RegExp('/news/[0-9]+'),\n  streamsStrategy([\n    () => matchPrecache('partials/header.html'),\n    () => matchPrecache('partials/info.html'),\n    () => matchPrecache('partials/hero.html'),\n    async ({ event, url }) => {\n      const id = url.pathname.split('/')[2];\n      try {\n        const response = await apiStrategy.handle({\n          event,\n          request: `${apiRoute}/${id}`,\n        });\n        const article = await response.json();\n        return generateArticle(article[0]);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    () => matchPrecache('partials/articles-close.html'),\n    () => matchPrecache('partials/footer.html'),\n  ])\n);\n\nregisterRoute(\n  new RegExp(`/about.html`),\n  streamsStrategy([\n    () => matchPrecache('partials/header.html'),\n    () => matchPrecache('partials/info.html'),\n    () => matchPrecache('partials/about.html'),\n    () => matchPrecache('partials/footer.html'),\n  ])\n);\nskipWaiting();\nclientsClaim();\n"]}